#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const { checkMissingTranslations, flattenObject, setNestedValue } = require('./check-missing-translations.js')

const localesDir = './i18n/locales'

// Translation mapping for missing keys
const translations = {
  'buyCredits.orderDetail': {
    'ja.json': 'Ê≥®ÊñáË©≥Á¥∞',
    'zh.json': 'ËÆ¢ÂçïËØ¶ÊÉÖ'
  },
  'settings': {
    'de.json': 'Einstellungen',
    'es.json': 'Configuraci√≥n',
    'fr.json': 'Param√®tres',
    'ja.json': 'Ë®≠ÂÆö',
    'pt.json': 'Configura√ß√µes',
    'zh.json': 'ËÆæÁΩÆ'
  },
  'userMenu.profile': {
    'de.json': 'Profil',
    'es.json': 'Perfil',
    'fr.json': 'Profil',
    'ja.json': '„Éó„É≠„Éï„Ç£„Éº„É´',
    'pt.json': 'Perfil',
    'zh.json': '‰∏™‰∫∫ËµÑÊñô'
  },
  'userMenu.buyCredits': {
    'de.json': 'Credits kaufen',
    'es.json': 'Comprar cr√©ditos',
    'fr.json': 'Acheter des cr√©dits',
    'ja.json': '„ÇØ„É¨„Ç∏„ÉÉ„ÉàË≥ºÂÖ•',
    'pt.json': 'Comprar cr√©ditos',
    'zh.json': 'Ë¥≠‰π∞ÁßØÂàÜ'
  },
  'userMenu.settings': {
    'de.json': 'Einstellungen',
    'es.json': 'Configuraci√≥n',
    'fr.json': 'Param√®tres',
    'ja.json': 'Ë®≠ÂÆö',
    'pt.json': 'Configura√ß√µes',
    'zh.json': 'ËÆæÁΩÆ'
  },
  'userMenu.api': {
    'de.json': 'API',
    'es.json': 'API',
    'fr.json': 'API',
    'ja.json': 'API',
    'pt.json': 'API',
    'zh.json': 'API'
  },
  'userMenu.logout': {
    'de.json': 'Abmelden',
    'es.json': 'Cerrar sesi√≥n',
    'fr.json': 'D√©connexion',
    'ja.json': '„É≠„Ç∞„Ç¢„Ç¶„Éà',
    'pt.json': 'Sair',
    'zh.json': 'ÈÄÄÂá∫ÁôªÂΩï'
  },
  'userMenu.greeting': {
    'de.json': 'Hallo, {name}',
    'es.json': 'Hola, {name}',
    'fr.json': 'Salut, {name}',
    'ja.json': '„Åì„Çì„Å´„Å°„ÅØ„ÄÅ{name}',
    'pt.json': 'Ol√°, {name}',
    'zh.json': '‰Ω†Â•ΩÔºå{name}'
  },
  'formats.mp3': {
    'de.json': 'MP3',
    'es.json': 'MP3',
    'fr.json': 'MP3',
    'ja.json': 'MP3',
    'pt.json': 'MP3',
    'zh.json': 'MP3'
  },
  'formats.wav': {
    'de.json': 'WAV',
    'es.json': 'WAV',
    'fr.json': 'WAV',
    'ja.json': 'WAV',
    'pt.json': 'WAV',
    'zh.json': 'WAV'
  },
  'channels.mono': {
    'de.json': 'Mono',
    'es.json': 'Mono',
    'fr.json': 'Mono',
    'ja.json': '„É¢„Éé„É©„É´',
    'pt.json': 'Mono',
    'zh.json': 'ÂçïÂ£∞ÈÅì'
  },
  'channels.stereo': {
    'de.json': 'Stereo',
    'es.json': 'Est√©reo',
    'fr.json': 'St√©r√©o',
    'ja.json': '„Çπ„ÉÜ„É¨„Ç™',
    'pt.json': 'Est√©reo',
    'zh.json': 'Á´ã‰ΩìÂ£∞'
  },
  'options.allow': {
    'de.json': 'Erlauben',
    'es.json': 'Permitir',
    'fr.json': 'Autoriser',
    'ja.json': 'Ë®±ÂèØ',
    'pt.json': 'Permitir',
    'zh.json': 'ÂÖÅËÆ∏'
  },
  'options.dontAllow': {
    'de.json': 'Nicht erlauben',
    'es.json': 'No permitir',
    'fr.json': 'Ne pas autoriser',
    'ja.json': 'Ë®±ÂèØ„Åó„Å™„ÅÑ',
    'pt.json': 'N√£o permitir',
    'zh.json': '‰∏çÂÖÅËÆ∏'
  },
  'options.voices': {
    'de.json': 'Stimmen',
    'es.json': 'Voces',
    'fr.json': 'Voix',
    'ja.json': 'Èü≥Â£∞',
    'pt.json': 'Vozes',
    'zh.json': 'ËØ≠Èü≥'
  },
  'options.pickVoice': {
    'de.json': 'Stimme ausw√§hlen',
    'es.json': 'Elegir voz',
    'fr.json': 'Choisir une voix',
    'ja.json': 'Èü≥Â£∞„ÇíÈÅ∏Êäû',
    'pt.json': 'Escolher voz',
    'zh.json': 'ÈÄâÊã©ËØ≠Èü≥'
  }
}

function fixMissingTranslations() {
  console.log('üîß Starting translation fix process...\n')

  const { missingReport } = checkMissingTranslations()

  if (Object.keys(missingReport).length === 0) {
    console.log('‚úÖ No missing translations found!')
    return
  }

  // Fix missing translations
  Object.entries(missingReport).forEach(([filename, missingKeys]) => {
    const filePath = path.join(localesDir, filename)

    try {
      const locale = JSON.parse(fs.readFileSync(filePath, 'utf8'))
      let modified = false

      missingKeys.forEach((keyPath) => {
        if (translations[keyPath] && translations[keyPath][filename]) {
          console.log(`üìù Adding ${keyPath} to ${filename}: "${translations[keyPath][filename]}"`)
          setNestedValue(locale, keyPath, translations[keyPath][filename])
          modified = true
        } else {
          console.log(`‚ö†Ô∏è  No translation provided for ${keyPath} in ${filename}`)
        }
      })

      if (modified) {
        // Write back to file with proper formatting
        fs.writeFileSync(filePath, JSON.stringify(locale, null, 2) + '\n', 'utf8')
        console.log(`‚úÖ Updated ${filename}\n`)
      }
    } catch (error) {
      console.error(`‚ùå Error updating ${filename}:`, error.message)
    }
  })

  console.log('üéâ Translation fix process completed!\n')

  // Verify the fixes
  console.log('üîç Verifying fixes...\n')
  checkMissingTranslations()
}

if (require.main === module) {
  fixMissingTranslations()
}
